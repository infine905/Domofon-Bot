from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove

from .profile import getProfile
from utils import Database, getTenantIdByPhone

RouterReg = Router()

text='–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –∫–æ–Ω—Ç–∞–∫—Ç'

@RouterReg.message(Command('start'))
async def sendContactFromUser(message:Message) -> None:
    if Database().GetOne(data='id', table_name='Users', find_param='tg_id', find_value=message.from_user.id):
        await getProfile(message=message, is_start=True)
        return
    else:
        contact_button = [[KeyboardButton(text=text, request_contact=True)]]
        keyboard = ReplyKeyboardMarkup(resize_keyboard=True, keyboard=contact_button)
        await message.answer(text=text, reply_markup=keyboard)
        
@RouterReg.message(Command('restore'))
async def sendContactFromUser(message:Message) -> None:
    if Database().GetOne(data='id', table_name='Users', find_param='tg_id', find_value=message.from_user.id):
    
        contact_button = [[KeyboardButton(text=text, request_contact=True)]]
        keyboard = ReplyKeyboardMarkup(resize_keyboard=True, keyboard=contact_button)
        await message.answer(text=text, reply_markup=keyboard)

@RouterReg.message(F.contact)
async def Register(message:Message) -> None:
    if Database().GetOne(data='id', table_name='Users', find_param='tg_id', find_value=message.contact.user_id):
        await message.answer(text='üòé –í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã', reply_markup=ReplyKeyboardRemove())
        return
    
    if message.from_user.id != message.contact.user_id:
        await message.answer(text='üò° –û—Ç–ø—Ä–∞–≤—å—Ç–µ *—Å–≤–æ–π* –∫–æ–Ω—Ç–∞–∫—Ç', reply_markup=ReplyKeyboardRemove())
        return

    phone = message.contact.phone_number.replace(' ', '').replace('+', '')    
    phone = int(phone)
    
    tenant_id = getTenantIdByPhone(phone=phone)

    if tenant_id == False:
        await message.answer(text='üò¢ –í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º —Å–∏—Å—Ç–µ–º—ã')
        return

    if not(Database().AddRow(table_name='users', tg_id=message.from_user.id, tenant_id=tenant_id, phone=phone)):
        text='–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å'
        await message.answer(text=text)
        return

    await message.answer(text=f"üéâ –í—ã —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–∏—Ä–æ–≤–∞–ª–∏—Å—å", reply_markup=ReplyKeyboardRemove())

    await getProfile(message=message, is_start=True)
